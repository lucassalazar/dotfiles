# Set modifier key as "super"
set $mod Mod4

###---Styling---###
font pango:MesloLGS NF 9

# Titlebar customization
show_marks yes
title_align center
client.focused          #8cafd2 #8cafd2 #2e3440 #cdcecf #8cafd2 
client.focused_inactive #2e3440 #2e3440 #cdcecf #2e3440 #2e3440
client.unfocused        #2e3440 #2e3440 #cdcecf #2e3440 #2e3440
client.urgent           #d06779 #d06779 #cdcecf #cdcecf #d06779

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Kill focused window
bindsym $mod+Shift+q kill

# Start rofi (a program launcher)
bindsym $mod+d exec "rofi -modes drun,run -show drun" 

# Start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run -fn "MesloLGS NF-8"

###---Window Manipulation--###
# Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Change the focus with the cursor keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Move focused windows the cursor keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Toggle stacking layout
bindsym $mod+Shift+s layout stacking

# Toggle tabbed layout
bindsym $mod+Shift+t layout tabbed

# Toggle layout split
bindsym $mod+Shift+i layout toggle split

# Toggle between tiling and floating windoww
bindsym $mod+Shift+space floating toggle

# Change the focus between tiling and floating windows
bindsym $mod+space focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# Move a focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Move focused window and swap to that screen
bindsym $mod+Control+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Control+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Control+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Control+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Control+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Control+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Control+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Control+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Control+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Control+0 move container to workspace $ws10; workspace $ws10

# Move workspaces betweeen monitors
bindsym $mod+Control+m move workspace to output primary
bindsym $mod+Control+s move workspace to output HDMI-1
bindsym $mod+Control+l move workspace to output right
bindsym $mod+Control+h move workspace to output left
bindsym $mod+Control+j move workspace to output down
bindsym $mod+Control+k move workspace to output up

# Moves container to the active workspace on another screen
bindsym $mod+Shift+Control+m move container to output primary
bindsym $mod+Shift+Control+s move container to output HDMI-1
bindsym $mod+Shift+Control+l move container to output right
bindsym $mod+Shift+Control+h move container to output left
bindsym $mod+Shift+Control+j move container to output down
bindsym $mod+Shift+Control+k move container to output up

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

###---Start external scripts---###
# Status bar
bar {
    i3bar_command i3bar
    status_command i3blocks
    strip_workspace_numbers yes
    separator_symbol " "
    position top
    height 28
    tray_padding 3 
    colors{
        background         #2e3440
        statusline         #cdcecf
        separator          #81a1c1
        active_workspace   #81a1c1 #81a1c1 #2e3440
        focused_workspace  #8cafd2 #8cafd2 #2e3440
        inactive_workspace #3b4252 #3b4252 #cdcecf
        urgent_workspace   #d06779 #d06779 #cdcecf
        binding_mode       #b48ead #b48ead #2e3440
    }
}

# Activate auto tiling
exec_always --no-startup-id autotiling 

# Wi-Fi applet
exec --no-startup-id nm-applet

# Removable media manager
exec --no-startup-id udiskie -t

# Volume control applet
exec --no-startup-id volumeicon

# Bluetooth applet
exec --no-startup-id blueberry-tray 

# Set wallpaper and adjust monitors
exec_always --no-startup-id ~/.local/scripts/monitorcfg

# Activate compositor
exec --no-startup-id picom -b

# Enable touchpad tapping
exec xinput set-prop "SynPS/2 Synaptics TouchPad" "libinput Tapping Enabled" 1

###---Cursor speed---###
exec --no-startup-id xinput set-prop 11 295 1.9

###---Audio controls---###
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

###---Toggle external display---###
bindsym $mod+x exec --no-startup-id sh ~/.local/scripts/monitorcfg

###---Toggle keyboard layout---###
bindsym $mod+c exec --no-startup-id sh ~/.local/scripts/keyboardcfg

###---Brightness---###
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%-

###---System Control---###
bindsym $mod+shift+z exec sh ~/.local/scripts/prompt "Are you sure you would like to reboot?" "reboot"
bindsym $mod+shift+x exec sh ~/.local/scripts/prompt "Are you sure you would like to suspend?" "systemctl suspend"
bindsym $mod+Shift+b exec betterlockscreen -l dim
# bindsym $mod+Shift+b exec i3lock --color 2e3440

###---Calculator---###

###---Screenshot---###
# Fullscreen
bindsym Print exec --no-startup-id flameshot full -p "/home/$USER/Pictures/Screenshots"
# Active window
bindsym $mod+Print exec --no-startup-id flameshot screen -n 1 -p "/home/$USER/Pictures/Screenshots"
# Selection
bindsym Shift+Print exec --no-startup-id flameshot gui -p "/home/$USER/Pictures/Screenshots" 

# Fullscreen clipboard
bindsym Ctrl+Print exec --no-startup-id flameshot full --clipboard 
# Active window clipboard
bindsym Ctrl+$mod+Print exec --no-startup-id flameshot screen -n 1 --clipboard 
# Selection clipboard
bindsym Ctrl+Shift+Print exec --no-startup-id flameshot gui --clipboard

###---Launch programs---###
bindsym $mod+Return exec alacritty
bindsym $mod+t exec thunar

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# System tray GUIs

# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# Lock screen
# bindsym $mod+x exec gdmflexiserver

# Suspend
# bindsym $mod+Shift+x exec systemctl suspend
